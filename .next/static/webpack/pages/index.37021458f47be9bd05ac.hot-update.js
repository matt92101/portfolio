/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/constants/constants.js":
/*!************************************!*\
  !*** ./src/constants/constants.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"projects\": function() { return /* binding */ projects; },\n/* harmony export */   \"TimeLineData\": function() { return /* binding */ TimeLineData; }\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar projects = [{\n  title: 'Atlas Health',\n  description: \"Atlas Health is a comprehensive fitness application that offers users the ability to customize their workouts according to their preferences. With the app, users can either create their exercises or select from pre-existing workout routines. It offers several features such as tracking calories burned and ingested.The app has a test coverage of 75%, using Jest and RSpec, ensuring the app's reliability and stability.\",\n  image: '/images/atlasdesign.png',\n  tags: ['React.js', 'Ruby on Rails'],\n  source: 'https://github.com/Atlas-Capstone/Atlas-Health-App',\n  visit: 'https://atlas-capstone.onrender.com/',\n  id: 0\n}, {// title: 'Project Placeholder',\n  // description:\"This is a temporary placeholder\",\n  // image: '/images/.png',\n  // tags: ['React', 'JavaScript'],\n  // source: 'https://google.com',\n  // visit: 'https://google.com',\n  // id: 1,\n}];\nvar TimeLineData = [{\n  year: 2017,\n  text: 'test'\n}, {\n  year: 2018,\n  text: 'test2'\n}, {\n  year: 2019,\n  text: 'test3'\n}, {\n  year: 2020,\n  text: 'test4'\n}, {\n  year: 2021,\n  text: 'test5'\n}];\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbnN0YW50cy9jb25zdGFudHMuanM/ZTZmZCJdLCJuYW1lcyI6WyJwcm9qZWN0cyIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJpbWFnZSIsInRhZ3MiLCJzb3VyY2UiLCJ2aXNpdCIsImlkIiwiVGltZUxpbmVEYXRhIiwieWVhciIsInRleHQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQU1BLFFBQVEsR0FBRyxDQUN0QjtBQUNFQyxPQUFLLEVBQUUsY0FEVDtBQUVFQyxhQUFXLEVBQUUsb2FBRmY7QUFHSUMsT0FBSyxFQUFFLHlCQUhYO0FBSUlDLE1BQUksRUFBRSxDQUFDLFVBQUQsRUFBYSxlQUFiLENBSlY7QUFLRUMsUUFBTSxFQUFFLG9EQUxWO0FBTUVDLE9BQUssRUFBRSxzQ0FOVDtBQU9FQyxJQUFFLEVBQUU7QUFQTixDQURzQixFQVV0QixDQUNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEYsQ0FWc0IsQ0FBakI7QUFzQkEsSUFBTUMsWUFBWSxHQUFHLENBQzFCO0FBQUVDLE1BQUksRUFBRSxJQUFSO0FBQWNDLE1BQUksRUFBRTtBQUFwQixDQUQwQixFQUUxQjtBQUFFRCxNQUFJLEVBQUUsSUFBUjtBQUFjQyxNQUFJLEVBQUU7QUFBcEIsQ0FGMEIsRUFHMUI7QUFBRUQsTUFBSSxFQUFFLElBQVI7QUFBY0MsTUFBSSxFQUFFO0FBQXBCLENBSDBCLEVBSTFCO0FBQUVELE1BQUksRUFBRSxJQUFSO0FBQWNDLE1BQUksRUFBRTtBQUFwQixDQUowQixFQUsxQjtBQUFFRCxNQUFJLEVBQUUsSUFBUjtBQUFjQyxNQUFJLEVBQUU7QUFBcEIsQ0FMMEIsQ0FBckIiLCJmaWxlIjoiLi9zcmMvY29uc3RhbnRzL2NvbnN0YW50cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBwcm9qZWN0cyA9IFtcbiAge1xuICAgIHRpdGxlOiAnQXRsYXMgSGVhbHRoJyxcbiAgICBkZXNjcmlwdGlvbjogXCJBdGxhcyBIZWFsdGggaXMgYSBjb21wcmVoZW5zaXZlIGZpdG5lc3MgYXBwbGljYXRpb24gdGhhdCBvZmZlcnMgdXNlcnMgdGhlIGFiaWxpdHkgdG8gY3VzdG9taXplIHRoZWlyIHdvcmtvdXRzIGFjY29yZGluZyB0byB0aGVpciBwcmVmZXJlbmNlcy4gV2l0aCB0aGUgYXBwLCB1c2VycyBjYW4gZWl0aGVyIGNyZWF0ZSB0aGVpciBleGVyY2lzZXMgb3Igc2VsZWN0IGZyb20gcHJlLWV4aXN0aW5nIHdvcmtvdXQgcm91dGluZXMuIEl0IG9mZmVycyBzZXZlcmFsIGZlYXR1cmVzIHN1Y2ggYXMgdHJhY2tpbmcgY2Fsb3JpZXMgYnVybmVkIGFuZCBpbmdlc3RlZC5UaGUgYXBwIGhhcyBhIHRlc3QgY292ZXJhZ2Ugb2YgNzUlLCB1c2luZyBKZXN0IGFuZCBSU3BlYywgZW5zdXJpbmcgdGhlIGFwcCdzIHJlbGlhYmlsaXR5IGFuZCBzdGFiaWxpdHkuXCIsXG4gICAgICBpbWFnZTogJy9pbWFnZXMvYXRsYXNkZXNpZ24ucG5nJyxcbiAgICAgIHRhZ3M6IFsnUmVhY3QuanMnLCAnUnVieSBvbiBSYWlscyddLFxuICAgIHNvdXJjZTogJ2h0dHBzOi8vZ2l0aHViLmNvbS9BdGxhcy1DYXBzdG9uZS9BdGxhcy1IZWFsdGgtQXBwJyxcbiAgICB2aXNpdDogJ2h0dHBzOi8vYXRsYXMtY2Fwc3RvbmUub25yZW5kZXIuY29tLycsXG4gICAgaWQ6IDAsXG4gIH0sXG4gIHtcbiAgICAvLyB0aXRsZTogJ1Byb2plY3QgUGxhY2Vob2xkZXInLFxuICAgIC8vIGRlc2NyaXB0aW9uOlwiVGhpcyBpcyBhIHRlbXBvcmFyeSBwbGFjZWhvbGRlclwiLFxuICAgIC8vIGltYWdlOiAnL2ltYWdlcy8ucG5nJyxcbiAgICAvLyB0YWdzOiBbJ1JlYWN0JywgJ0phdmFTY3JpcHQnXSxcbiAgICAvLyBzb3VyY2U6ICdodHRwczovL2dvb2dsZS5jb20nLFxuICAgIC8vIHZpc2l0OiAnaHR0cHM6Ly9nb29nbGUuY29tJyxcbiAgICAvLyBpZDogMSxcbiAgfSxcblxuXTtcblxuZXhwb3J0IGNvbnN0IFRpbWVMaW5lRGF0YSA9IFtcbiAgeyB5ZWFyOiAyMDE3LCB0ZXh0OiAndGVzdCcsIH0sXG4gIHsgeWVhcjogMjAxOCwgdGV4dDogJ3Rlc3QyJywgfSxcbiAgeyB5ZWFyOiAyMDE5LCB0ZXh0OiAndGVzdDMnLCB9LFxuICB7IHllYXI6IDIwMjAsIHRleHQ6ICd0ZXN0NCcsIH0sXG4gIHsgeWVhcjogMjAyMSwgdGV4dDogJ3Rlc3Q1JywgfSxcbl07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/constants/constants.js\n");

/***/ })

});